package com.example.foodapp

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.foodapp.ui.theme.FoodAppTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            FoodAppTheme {
                AppContent()
            }
        }
    }
}

@Composable
fun AppContent() {
    var isLoggedIn by remember { mutableStateOf(false) }
    var username by remember { mutableStateOf(TextFieldValue("")) }

    if (!isLoggedIn) {
        LoginScreen(username, onLogin = { isLoggedIn = true })
    } else {
        FoodListScreen(username.text)
    }
}

@Composable
fun LoginScreen(username: TextFieldValue, onLogin: () -> Unit) {
    var name by remember { mutableStateOf(username) }

    Column(
        modifier = Modifier.fillMaxSize(),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text(text = "Welcome to Food App üçî", style = MaterialTheme.typography.headlineSmall)
        Spacer(modifier = Modifier.height(16.dp))

        OutlinedTextField(
            value = name,
            onValueChange = { name = it },
            label = { Text("Enter Your Name") }
        )

        Spacer(modifier = Modifier.height(16.dp))

        Button(onClick = onLogin, enabled = name.text.isNotEmpty()) {
            Text(text = "Login")
        }
    }
}

@Composable
fun FoodListScreen(username: String) {
    val foodItems = listOf(
        FoodItem("Burger", "Delicious cheese burger", 5.99, R.drawable.burger),
        FoodItem("Pizza", "Cheesy pepperoni pizza", 8.99, R.drawable.pizza),
        FoodItem("Pasta", "Creamy Alfredo pasta", 7.49, R.drawable.pasta)
    )

    var orderMessage by remember { mutableStateOf<String?>(null) }

    Scaffold(
        topBar = { TopBar(username) },
        snackbarHost = {
            orderMessage?.let { message ->
                Snackbar(
                    action = {
                        TextButton(onClick = { orderMessage = null }) {
                            Text("OK")
                        }
                    }
                ) {
                    Text(message)
                }
            }
        }
    ) { innerPadding ->
        LazyColumn(modifier = Modifier.padding(innerPadding).padding(16.dp)) {
            items(foodItems.size) { index ->
                FoodCard(foodItems[index]) { food ->
                    orderMessage = "${food.name} ordered successfully!"
                }
            }
        }
    }
}

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun TopBar(username: String) {
    TopAppBar(
        title = { Text("Welcome, $username! üçΩÔ∏è") },
        modifier = Modifier.fillMaxWidth()
    )
}

@Composable
fun FoodCard(food: FoodItem, onOrderClick: (FoodItem) -> Unit) {
    Card(
        modifier = Modifier.fillMaxWidth().padding(vertical = 8.dp),
        shape = RoundedCornerShape(16.dp),
        elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
    ) {
        Row(modifier = Modifier.padding(16.dp), verticalAlignment = Alignment.CenterVertically) {
            Image(
                painter = painterResource(id = food.imageRes),
                contentDescription = food.name,
                modifier = Modifier.size(80.dp),
                contentScale = ContentScale.Crop
            )
            Spacer(modifier = Modifier.width(16.dp))
            Column(modifier = Modifier.weight(1f)) {
                Text(text = food.name, style = MaterialTheme.typography.headlineSmall)
                Text(text = food.description, style = MaterialTheme.typography.bodyMedium)
                Text(text = "$${food.price}", style = MaterialTheme.typography.bodyLarge)
            }
            Button(onClick = { onOrderClick(food) }) {
                Text("Order Now")
            }
        }
    }
}

data class FoodItem(val name: String, val description: String, val price: Double, val imageRes: Int)

@Preview(showBackground = true)
@Composable
fun FoodListPreview() {
    FoodAppTheme {
        FoodListScreen("John")
    }
}
